{"ast":null,"code":"var _jsxFileName = \"/Users/dayanaromero/Documents/adalab/modulo-3-leccion-08-Route/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport Header from './Header';\nimport PostList from './PostsList';\nimport Form from './Form';\nimport Home from './Home';\nimport PostId from './PostId.js';\nimport data from '../data/data.json';\nimport '../stylesheet/index.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [posts, setPosts] = useState(data);\n  const [name, setName] = useState('');\n  const [desc, setDesc] = useState('');\n  const [country, setCountry] = useState('');\n  const [img, setImg] = useState('');\n  const routeData = useRouteMatch('/posts/:postId');\n  const postId = routeData !== null ? routeData.params.postId : '';\n  console.log(postId);\n\n  const handleInput = (value, id) => {\n    if (id === 'name') {\n      setName(value);\n    } else if (id === 'description') {\n      setDesc(value);\n    } else if (id === 'description') {\n      setDesc(value);\n    } else if (id === 'country') {\n      setCountry(value);\n    } else if (id === 'img') {\n      setImg(value);\n    }\n  };\n\n  const newPost = () => {\n    const data = {\n      id: `e-${posts.length + 1}`,\n      name: name,\n      country: country,\n      imageUrl: img,\n      description: desc\n    };\n    posts.push(data);\n    setPosts([...posts]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Las maravillas del mundo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      name: name,\n      desc: desc,\n      img: img,\n      handleInput: handleInput,\n      newPost: newPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/posts\",\n        children: /*#__PURE__*/_jsxDEV(PostList, {\n          postsList: posts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/posts/:postId\",\n        children: /*#__PURE__*/_jsxDEV(PostId, {\n          routeData: postId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"I5gWygjRM1kE+LQb0WzkSaLFdWE=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/dayanaromero/Documents/adalab/modulo-3-leccion-08-Route/src/components/App.js"],"names":["useState","Route","Switch","useRouteMatch","Header","PostList","Form","Home","PostId","data","App","posts","setPosts","name","setName","desc","setDesc","country","setCountry","img","setImg","routeData","postId","params","console","log","handleInput","value","id","newPost","length","imageUrl","description","push"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\n\nimport Header from './Header';\nimport PostList from './PostsList';\nimport Form from './Form';\nimport Home from './Home';\n\nimport PostId from './PostId.js';\nimport data from '../data/data.json';\nimport '../stylesheet/index.scss';\n\nconst App = () => {\n  const [posts, setPosts] = useState(data);\n  const [name, setName] = useState('');\n  const [desc, setDesc] = useState('');\n  const [country, setCountry] = useState('');\n  const [img, setImg] = useState('');\n\n  const routeData = useRouteMatch('/posts/:postId');\n  const postId = routeData !== null ? routeData.params.postId : '';\n  console.log(postId);\n  const handleInput = (value, id) => {\n    if (id === 'name') {\n      setName(value);\n    } else if (id === 'description') {\n      setDesc(value);\n    } else if (id === 'description') {\n      setDesc(value);\n    } else if (id === 'country') {\n      setCountry(value);\n    } else if (id === 'img') {\n      setImg(value);\n    }\n  };\n\n  const newPost = () => {\n    const data = {\n      id: `e-${posts.length + 1}`,\n      name: name,\n      country: country,\n      imageUrl: img,\n      description: desc,\n    };\n    posts.push(data);\n    setPosts([...posts]);\n  };\n\n  return (\n    <div>\n      <Header title=\"Las maravillas del mundo\" />\n      <Form\n        name={name}\n        desc={desc}\n        img={img}\n        handleInput={handleInput}\n        newPost={newPost}\n      />\n\n      <Switch>\n        <Route path=\"/posts\">\n          <PostList postsList={posts} />\n        </Route>\n\n        {/* la prop render del componente Route puede ser una función u otro \n        componente */}\n        <Route path=\"/posts/:postId\">\n          <PostId routeData={postId} />\n        </Route>\n\n        <Route path=\"/\" exact>\n          {/* aquí puedo poner todo el código JSX que quiera */}\n          <Home />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}