{"ast":null,"code":"var _jsxFileName = \"/Users/dayanaromero/Documents/adalab/modulo-3-leccion-08-Route/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Header from './Header';\nimport PostList from './PostsList';\nimport Form from './Form';\nimport Home from './Home';\nimport PostId from './PostId';\nimport data from '../data/data.json';\nimport '../stylesheet/index.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [posts, setPosts] = useState(data);\n  const [name, setName] = useState('');\n  const [desc, setDesc] = useState('');\n  const [country, setCountry] = useState('');\n  const [img, setImg] = useState('');\n\n  const handleInput = (value, id) => {\n    if (id === 'name') {\n      setName(value);\n    } else if (id === 'description') {\n      setDesc(value);\n    } else if (id === 'description') {\n      setDesc(value);\n    } else if (id === 'country') {\n      setCountry(value);\n    } else if (id === 'img') {\n      setImg(value);\n    }\n  };\n\n  const newPost = () => {\n    const data = {\n      id: `e-${posts.length + 1}`,\n      name: name,\n      country: country,\n      imageUrl: img,\n      description: desc\n    };\n    posts.push(data);\n    setPosts([...posts]);\n  }; // esta función solo se ejecuta cuando estamos en la ruta /product/:productId\n  // esta función funciona como un componente de React en sí mismo y recibe unas props\n\n\n  const renderProductoDetail = routerProps => {\n    // ReactRouterDom me pasa routerProps con toda la info que él cree que puedo necesitar\n    // - si he puesto <Router path=\"/product/:productId\"> tengo el id del producto en routerProps.match.params.productId\n    // - si he puesto <Router path=\"/product/:id\"> tengo el id del producto en routerProps.match.params.id\n    console.log('Id del producto de la ruta', routerProps.match.params.productId); // obtengo el id del producto desde la ruta\n\n    const routerProductId = routerProps.match.params.productId; // busco el producto en el listado de productos a través del id de la ruta\n\n    const productFound = products.find(product => product.id === routerProductId); // siempre debo comprobar si el producto ha sido encontrado\n\n    if (productFound) {\n      // renderizo el producto y se le paso por props\n      return /*#__PURE__*/_jsxDEV(ProductDetail, {\n        product: productFound\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 14\n      }, this);\n    } else {// renderizo el producto no encontrado o no renderizo nada\n      //return <ProductNotFound />;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Las maravillas del mundo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      name: name,\n      desc: desc,\n      img: img,\n      handleInput: handleInput,\n      newPost: newPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/posts\",\n        children: /*#__PURE__*/_jsxDEV(PostList, {\n          postsList: posts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/posts/:postId\",\n        render: renderProductoDetail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about-us\",\n        children: /*#__PURE__*/_jsxDEV(AboutUs, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/contact\",\n        render: Contact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Npcge7oSfhRHk70IqrvG7/E0gOQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/dayanaromero/Documents/adalab/modulo-3-leccion-08-Route/src/components/App.js"],"names":["useState","Route","Switch","Header","PostList","Form","Home","PostId","data","App","posts","setPosts","name","setName","desc","setDesc","country","setCountry","img","setImg","handleInput","value","id","newPost","length","imageUrl","description","push","renderProductoDetail","routerProps","console","log","match","params","productId","routerProductId","productFound","products","find","product","Contact"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Header from './Header';\nimport PostList from './PostsList';\nimport Form from './Form';\nimport Home from './Home';\n\nimport PostId from './PostId';\nimport data from '../data/data.json';\nimport '../stylesheet/index.scss';\n\nconst App = () => {\n  const [posts, setPosts] = useState(data);\n  const [name, setName] = useState('');\n  const [desc, setDesc] = useState('');\n  const [country, setCountry] = useState('');\n  const [img, setImg] = useState('');\n\n  const handleInput = (value, id) => {\n    if (id === 'name') {\n      setName(value);\n    } else if (id === 'description') {\n      setDesc(value);\n    } else if (id === 'description') {\n      setDesc(value);\n    } else if (id === 'country') {\n      setCountry(value);\n    } else if (id === 'img') {\n      setImg(value);\n    }\n  };\n\n  const newPost = () => {\n    const data = {\n      id: `e-${posts.length + 1}`,\n      name: name,\n      country: country,\n      imageUrl: img,\n      description: desc,\n    };\n    posts.push(data);\n    setPosts([...posts]);\n  };\n\n  // esta función solo se ejecuta cuando estamos en la ruta /product/:productId\n  // esta función funciona como un componente de React en sí mismo y recibe unas props\n  const renderProductoDetail = (routerProps) => {\n    // ReactRouterDom me pasa routerProps con toda la info que él cree que puedo necesitar\n    // - si he puesto <Router path=\"/product/:productId\"> tengo el id del producto en routerProps.match.params.productId\n    // - si he puesto <Router path=\"/product/:id\"> tengo el id del producto en routerProps.match.params.id\n    console.log(\n      'Id del producto de la ruta',\n      routerProps.match.params.productId\n    );\n\n    // obtengo el id del producto desde la ruta\n    const routerProductId = routerProps.match.params.productId;\n\n    // busco el producto en el listado de productos a través del id de la ruta\n    const productFound = products.find(\n      (product) => product.id === routerProductId\n    );\n\n    // siempre debo comprobar si el producto ha sido encontrado\n    if (productFound) {\n      // renderizo el producto y se le paso por props\n      return <ProductDetail product={productFound} />;\n    } else {\n      // renderizo el producto no encontrado o no renderizo nada\n      //return <ProductNotFound />;\n    }\n  };\n  return (\n    <div>\n      <Header title=\"Las maravillas del mundo\" />\n      <Form\n        name={name}\n        desc={desc}\n        img={img}\n        handleInput={handleInput}\n        newPost={newPost}\n      />\n\n      <Switch>\n        <Route path=\"/posts\">\n          <PostList postsList={posts} />\n        </Route>\n\n        <Route path=\"/posts/:postId\" render={renderProductoDetail} />\n\n        <Route path=\"/\" exact>\n          {/* aquí puedo poner todo el código JSX que quiera */}\n          <Home />\n        </Route>\n\n        <Route path=\"/about-us\">\n          {/* aquí puedo poner todo el código JSX que quiera */}\n          <AboutUs />\n        </Route>\n\n        {/* la prop render del componente Route puede ser una función u otro componente */}\n        <Route path=\"/contact\" render={Contact} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}