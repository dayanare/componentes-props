{"ast":null,"code":"var _jsxFileName = \"/Users/dayanaromero/Documents/adalab/ejercicios-en-clase-n/modulo-3-leccion-07-Lifting-children/src/components/Input.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = props => {\n  const handleInput = ev => {\n    // subo los datos hacia arriba con lifting\n    props.handleInput(props.id, ev.target.value); // aqui tengo acceso a las props y por ello a props.id\n    // la línea anterior sería igual que:\n    // props.handleInput(ev.target.id, ev.target.value);\n    // porque ev.target.id es lo mismo que props.id\n    // en inputs de tipo text puedo trabajar con el name y el id ¿sabrías decir por qué?\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id,\n      children: props.labelText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form__input-text\",\n      type: \"text\",\n      id: props.id,\n      name: props.id,\n      onChange: handleInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/Users/dayanaromero/Documents/adalab/ejercicios-en-clase-n/modulo-3-leccion-07-Lifting-children/src/components/Input.js"],"names":["React","Input","props","handleInput","ev","id","target","value","labelText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB,QAAMC,WAAW,GAAGC,EAAE,IAAI;AACxB;AACAF,IAAAA,KAAK,CAACC,WAAN,CAAkBD,KAAK,CAACG,EAAxB,EAA4BD,EAAE,CAACE,MAAH,CAAUC,KAAtC,EAFwB,CAIxB;AACA;AACA;AACA;AAEA;AACD,GAVD;;AAYA,sBACE;AAAA,4BACE;AAAO,MAAA,OAAO,EAAEL,KAAK,CAACG,EAAtB;AAAA,gBAA2BH,KAAK,CAACM;AAAjC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,SAAS,EAAC,kBADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,EAAE,EAAEN,KAAK,CAACG,EAHZ;AAIE,MAAA,IAAI,EAAEH,KAAK,CAACG,EAJd;AAKE,MAAA,QAAQ,EAAEF;AALZ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAzBD;;KAAMF,K;AA2BN,eAAeA,KAAf","sourcesContent":["import React from 'react';\n\nconst Input = props => {\n  const handleInput = ev => {\n    // subo los datos hacia arriba con lifting\n    props.handleInput(props.id, ev.target.value);\n\n    // aqui tengo acceso a las props y por ello a props.id\n    // la línea anterior sería igual que:\n    // props.handleInput(ev.target.id, ev.target.value);\n    // porque ev.target.id es lo mismo que props.id\n\n    // en inputs de tipo text puedo trabajar con el name y el id ¿sabrías decir por qué?\n  };\n\n  return (\n    <div>\n      <label htmlFor={props.id}>{props.labelText}</label>\n      <input\n        className=\"form__input-text\"\n        type=\"text\"\n        id={props.id}\n        name={props.id}\n        onChange={handleInput}\n      />\n    </div>\n  );\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}