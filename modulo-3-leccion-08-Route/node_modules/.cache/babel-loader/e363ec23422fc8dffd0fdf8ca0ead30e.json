{"ast":null,"code":"var _jsxFileName = \"/Users/dayanaromero/Documents/adalab/modulo-3-leccion-08-Route/src/components/Radio.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = props => {\n  const handleInput = ev => {\n    // subo los datos hacia arriba con lifting\n    props.handleInput(ev.target.value, ev.target.name); // en inputs de tipo radio necesito trabajar con el name\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form__input-text\",\n      type: \"radio\",\n      name: props.name,\n      value: props.value,\n      onChange: handleInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/Users/dayanaromero/Documents/adalab/modulo-3-leccion-08-Route/src/components/Radio.js"],"names":["React","Input","props","handleInput","ev","target","value","name","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,QAAMC,WAAW,GAAIC,EAAD,IAAQ;AAC1B;AACAF,IAAAA,KAAK,CAACC,WAAN,CAAkBC,EAAE,CAACC,MAAH,CAAUC,KAA5B,EAAmCF,EAAE,CAACC,MAAH,CAAUE,IAA7C,EAF0B,CAG1B;AACD,GAJD;;AAKA,sBACE;AAAA,4BACE;AAAA,gBAAQL,KAAK,CAACM;AAAd;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,SAAS,EAAC,kBADZ;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,IAAI,EAAEN,KAAK,CAACK,IAHd;AAIE,MAAA,KAAK,EAAEL,KAAK,CAACI,KAJf;AAKE,MAAA,QAAQ,EAAEH;AALZ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAlBD;;KAAMF,K;AAoBN,eAAeA,KAAf","sourcesContent":["import React from 'react';\n\nconst Input = (props) => {\n  const handleInput = (ev) => {\n    // subo los datos hacia arriba con lifting\n    props.handleInput(ev.target.value, ev.target.name);\n    // en inputs de tipo radio necesito trabajar con el name\n  };\n  return (\n    <div>\n      <label>{props.label}</label>\n      <input\n        className=\"form__input-text\"\n        type=\"radio\"\n        name={props.name}\n        value={props.value}\n        onChange={handleInput}\n      />\n    </div>\n  );\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}