{"ast":null,"code":"var _jsxFileName = \"/Users/dayanaromero/Documents/adalab/ejercicios-en-clase-m/modulo-3-leccion-09-rutas-dinamicas/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Header from './Header';\nimport AboutUs from './AboutUs';\nimport Contact from './Contact';\nimport Home from './Home';\nimport ProductList from './ProductList';\nimport ProductDetail from './ProductDetail';\nimport ProductNotFound from './ProductNotFound';\nimport data from '../data/data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [products] = useState(data); // esta función solo se ejecuta cuando estamos en la ruta /product/:productId\n  // esta función funciona como un componente de React en sí mismo y recibe unas props\n\n  const renderProductoDetail = routerProps => {\n    // ReactRouterDom me pasa routerProps con toda la info que él cree que puedo necesitar\n    // - si he puesto <Router path=\"/product/:productId\"> tengo el id del producto en routerProps.match.params.productId\n    // - si he puesto <Router path=\"/product/:id\"> tengo el id del producto en routerProps.match.params.id\n    console.log('Id del producto de la ruta', routerProps.match.params.productId); // obtengo el id del producto desde la ruta\n\n    const routerProductId = routerProps.match.params.productId; // busco el producto en el listado de productos a través del id de la ruta\n\n    const productFound = products.find(product => product.id === routerProductId); // siempre debo comprobar si el producto ha sido encontrado\n\n    if (productFound) {\n      // renderizo el producto y se le paso por props\n      return /*#__PURE__*/_jsxDEV(ProductDetail, {\n        product: productFound\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 14\n      }, this);\n    } else {\n      // renderizo el producto no encontrado o no renderizo nada\n      return /*#__PURE__*/_jsxDEV(ProductNotFound, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/products\",\n        children: /*#__PURE__*/_jsxDEV(ProductList, {\n          products: products\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/product/:productId\",\n        render: renderProductoDetail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about-us\",\n        children: /*#__PURE__*/_jsxDEV(AboutUs, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/contact\",\n        render: Contact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"g8Q+LGU/lFDpSV4ZXrAxV1gj4WY=\");\n\n_c = App;\nexport default App; // ¿Qué debemos poner antes /products o /proudct/:productId?\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/dayanaromero/Documents/adalab/ejercicios-en-clase-m/modulo-3-leccion-09-rutas-dinamicas/src/components/App.js"],"names":["React","useState","Route","Switch","Header","AboutUs","Contact","Home","ProductList","ProductDetail","ProductNotFound","data","App","products","renderProductoDetail","routerProps","console","log","match","params","productId","routerProductId","productFound","find","product","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,QAAD,IAAaZ,QAAQ,CAACU,IAAD,CAA3B,CADgB,CAGhB;AACA;;AACA,QAAMG,oBAAoB,GAAGC,WAAW,IAAI;AAC1C;AACA;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,WAAW,CAACG,KAAZ,CAAkBC,MAAlB,CAAyBC,SAAnE,EAJ0C,CAM1C;;AACA,UAAMC,eAAe,GAAGN,WAAW,CAACG,KAAZ,CAAkBC,MAAlB,CAAyBC,SAAjD,CAP0C,CAS1C;;AACA,UAAME,YAAY,GAAGT,QAAQ,CAACU,IAAT,CAAcC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeJ,eAAxC,CAArB,CAV0C,CAY1C;;AACA,QAAIC,YAAJ,EAAkB;AAChB;AACA,0BAAO,QAAC,aAAD;AAAe,QAAA,OAAO,EAAEA;AAAxB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAHD,MAGO;AACL;AACA,0BAAO,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF,GApBD;;AAsBA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAA,+BACE,QAAC,WAAD;AAAa,UAAA,QAAQ,EAAET;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,qBAAZ;AAAkC,QAAA,MAAM,EAAEC;AAA1C;AAAA;AAAA;AAAA;AAAA,cALF,eAOE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,KAAK,MAArB;AAAA,+BAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,cAPF,eAYE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAA,+BAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,cAZF,eAkBE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,MAAM,EAAER;AAA/B;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CArDD;;GAAMM,G;;KAAAA,G;AAuDN,eAAeA,GAAf,C,CAEA","sourcesContent":["import React, { useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Header from './Header';\nimport AboutUs from './AboutUs';\nimport Contact from './Contact';\nimport Home from './Home';\nimport ProductList from './ProductList';\nimport ProductDetail from './ProductDetail';\nimport ProductNotFound from './ProductNotFound';\nimport data from '../data/data.json';\n\nconst App = () => {\n  const [products] = useState(data);\n\n  // esta función solo se ejecuta cuando estamos en la ruta /product/:productId\n  // esta función funciona como un componente de React en sí mismo y recibe unas props\n  const renderProductoDetail = routerProps => {\n    // ReactRouterDom me pasa routerProps con toda la info que él cree que puedo necesitar\n    // - si he puesto <Router path=\"/product/:productId\"> tengo el id del producto en routerProps.match.params.productId\n    // - si he puesto <Router path=\"/product/:id\"> tengo el id del producto en routerProps.match.params.id\n    console.log('Id del producto de la ruta', routerProps.match.params.productId);\n\n    // obtengo el id del producto desde la ruta\n    const routerProductId = routerProps.match.params.productId;\n\n    // busco el producto en el listado de productos a través del id de la ruta\n    const productFound = products.find(product => product.id === routerProductId);\n\n    // siempre debo comprobar si el producto ha sido encontrado\n    if (productFound) {\n      // renderizo el producto y se le paso por props\n      return <ProductDetail product={productFound} />;\n    } else {\n      // renderizo el producto no encontrado o no renderizo nada\n      return <ProductNotFound />;\n    }\n  };\n\n  return (\n    <div>\n      <Header />\n\n      <Switch>\n        <Route path=\"/products\">\n          <ProductList products={products} />\n        </Route>\n\n        <Route path=\"/product/:productId\" render={renderProductoDetail} />\n\n        <Route path=\"/\" exact>\n          {/* aquí puedo poner todo el código JSX que quiera */}\n          <Home />\n        </Route>\n\n        <Route path=\"/about-us\">\n          {/* aquí puedo poner todo el código JSX que quiera */}\n          <AboutUs />\n        </Route>\n\n        {/* la prop render del componente Route puede ser una función u otro componente */}\n        <Route path=\"/contact\" render={Contact} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n\n// ¿Qué debemos poner antes /products o /proudct/:productId?\n"]},"metadata":{},"sourceType":"module"}